import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.jgoodies.forms.layout.CellConstraints;
import com.jgoodies.forms.layout.FormLayout;

import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.border.EmptyBorder;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.IOException;

/**
 * Created by User on 21.12.2016.
 */
public class FractalForm extends JFrame {
    private JLabel labelTest;
    private JButton buttonTest;
    private JPanel panelMain;
    private JPanel startInfoPanel;
    private JPanel endInfoPanel;
    private JPanel settingsPanel;
    private JPanel imagePanel;
    private JPanel statisticPanel;
    private JButton buttonDownloadPhoto;
    private JPanel menuPanel;
    private JSpinner spinnerBlockSize;
    private JSpinner spinnerCoefCompress;
    private JComboBox comboBoxBaseImage;
    private JSpinner spinnerCountDecompress;
    private JButton buttonCompress;
    private JPanel panelStartImage;
    private JPanel panelEndImage;
    private JMenuBar menuBar;


    ////////
    Graphics g;
    ////////

    public FractalForm() {
        $$$setupUI$$$();
        this.setContentPane(panelMain);
        setDefaultCloseOperation(EXIT_ON_CLOSE);

        menuBar = new JMenuBar();
        //add menu item
        /*Font font = new Font("Verdana", Font.PLAIN, 11);
        JMenu fileMenu = new JMenu("File");
        JMenuItem openItem = new JMenuItem("Open");
        openItem.setFont(font);
        fileMenu.add(openItem);
        menuBar.add(fileMenu);*/
        this.setJMenuBar(menuBar);


    }

    private void createUIComponents() {
        // TODO: place custom component creation code here

        ///
        SpinnerNumberModel model1 = new SpinnerNumberModel(4, 2, 32, 1);
        spinnerBlockSize = new JSpinner(model1);

        ///
        SpinnerNumberModel model2 = new SpinnerNumberModel(20000, 2, 40000, 1);
        spinnerCoefCompress = new JSpinner(model2);

        ///
        SpinnerNumberModel model3 = new SpinnerNumberModel(5, 1, 16, 1);
        spinnerCountDecompress = new JSpinner(model3);

        ///
        String[] baseImage = {
                "Клеточка",
                "Белая",
                "Черная"
        };
        comboBoxBaseImage = new JComboBox(baseImage);

        //
        buttonCompress = new JButton();
        buttonCompress.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {


                String filename = "D:/университет/диплом/fractImage/1.jpg";
                Image image = null;
                try {
                    image = ImageIO.read(new File(filename));
                } catch (IOException ee) {
                    ee.printStackTrace();
                }
                g = panelStartImage.getGraphics();
                g.drawImage(image, 0, 0, null);

                g = panelEndImage.getGraphics();
                g.drawImage(image, 0, 0, null);

            }
        });

        //

    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panelMain = new JPanel();
        panelMain.setLayout(new FormLayout("fill:d:grow", "center:max(d;4px):noGrow,top:4dlu:noGrow,center:d:noGrow,center:max(d;4px):noGrow,center:512px:noGrow,top:4dlu:noGrow,center:44px:noGrow"));
        panelMain.setPreferredSize(new Dimension(1050, 498));
        settingsPanel = new JPanel();
        settingsPanel.setLayout(new FormLayout("fill:283px:grow,left:5dlu:noGrow,fill:d:grow", "center:d:grow"));
        CellConstraints cc = new CellConstraints();
        panelMain.add(settingsPanel, cc.xy(1, 3, CellConstraints.DEFAULT, CellConstraints.FILL));
        startInfoPanel = new JPanel();
        startInfoPanel.setLayout(new FormLayout("fill:165px:noGrow,left:8dlu:noGrow,fill:0px:grow,left:5dlu:noGrow", "center:d:noGrow,top:4dlu:noGrow,center:max(d;4px):noGrow,top:4dlu:noGrow,center:26px:noGrow"));
        startInfoPanel.setPreferredSize(new Dimension(198, 125));
        startInfoPanel.setRequestFocusEnabled(true);
        settingsPanel.add(startInfoPanel, cc.xy(1, 1));
        startInfoPanel.setBorder(BorderFactory.createTitledBorder("Настройки компрессии"));
        buttonDownloadPhoto = new JButton();
        buttonDownloadPhoto.setText("Загрузить изображение");
        startInfoPanel.add(buttonDownloadPhoto, cc.xyw(1, 1, 4, CellConstraints.LEFT, CellConstraints.DEFAULT));
        final JLabel label1 = new JLabel();
        label1.setText("Размер рангового блока:");
        startInfoPanel.add(label1, new CellConstraints(1, 3, 1, 1, CellConstraints.LEFT, CellConstraints.DEFAULT, new Insets(0, 5, 0, 0)));
        spinnerBlockSize.setPreferredSize(new Dimension(50, 26));
        startInfoPanel.add(spinnerBlockSize, cc.xy(3, 3, CellConstraints.LEFT, CellConstraints.DEFAULT));
        final JLabel label2 = new JLabel();
        label2.setText("Коэффициент компрессии:");
        startInfoPanel.add(label2, new CellConstraints(1, 5, 1, 1, CellConstraints.LEFT, CellConstraints.DEFAULT, new Insets(0, 5, 0, 0)));
        spinnerCoefCompress.setPreferredSize(new Dimension(110, 26));
        startInfoPanel.add(spinnerCoefCompress, cc.xy(3, 5, CellConstraints.LEFT, CellConstraints.DEFAULT));
        endInfoPanel = new JPanel();
        endInfoPanel.setLayout(new FormLayout("fill:max(d;4px):noGrow,left:4dlu:noGrow,fill:max(d;4px):noGrow", "center:48px:grow,top:4dlu:noGrow,center:48px:noGrow"));
        endInfoPanel.setPreferredSize(new Dimension(364, 125));
        settingsPanel.add(endInfoPanel, cc.xy(3, 1, CellConstraints.FILL, CellConstraints.FILL));
        endInfoPanel.setBorder(BorderFactory.createTitledBorder("Настройки декомпрессии"));
        final JLabel label3 = new JLabel();
        label3.setText("Базовое изображение:");
        endInfoPanel.add(label3, new CellConstraints(1, 1, 1, 1, CellConstraints.DEFAULT, CellConstraints.DEFAULT, new Insets(0, 5, 0, 0)));
        comboBoxBaseImage.setPreferredSize(new Dimension(150, 26));
        endInfoPanel.add(comboBoxBaseImage, cc.xy(3, 1));
        final JLabel label4 = new JLabel();
        label4.setText("Количество итераций декопрессии:");
        endInfoPanel.add(label4, cc.xy(1, 3, CellConstraints.LEFT, CellConstraints.DEFAULT));
        spinnerCountDecompress.setPreferredSize(new Dimension(50, 26));
        endInfoPanel.add(spinnerCountDecompress, cc.xy(3, 3, CellConstraints.LEFT, CellConstraints.DEFAULT));
        imagePanel = new JPanel();
        imagePanel.setLayout(new FormLayout("fill:512px:grow,left:4dlu:noGrow,fill:512px:grow", "center:512px:grow"));
        panelMain.add(imagePanel, cc.xy(1, 5, CellConstraints.DEFAULT, CellConstraints.FILL));
        panelStartImage = new JPanel();
        panelStartImage.setLayout(new FormLayout("", ""));
        panelStartImage.setOpaque(true);
        panelStartImage.setPreferredSize(new Dimension(512, 512));
        imagePanel.add(panelStartImage, cc.xy(1, 1, CellConstraints.DEFAULT, CellConstraints.FILL));
        panelEndImage = new JPanel();
        panelEndImage.setLayout(new FormLayout("fill:d:grow", "center:d:grow"));
        panelEndImage.setPreferredSize(new Dimension(512, 512));
        imagePanel.add(panelEndImage, cc.xy(3, 1));
        statisticPanel = new JPanel();
        statisticPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.add(statisticPanel, cc.xy(1, 7));
        menuPanel = new JPanel();
        menuPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panelMain.add(menuPanel, cc.xy(1, 1, CellConstraints.DEFAULT, CellConstraints.TOP));
        buttonCompress.setText("Выполнить сжатие");
        panelMain.add(buttonCompress, cc.xy(1, 4));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }
}
